== Example 12 - WS-Security SSL/Certificate Secured Web Service Web Client project ==

How To Build / Deploy / Run
***************************

1. Pre-requisites

  - Ensure you have fulfilled the pre-requisites outlined in the main Web 
    Service chapter examples readme file at:

    ../../README.txt

2. Generate the Keys, Certificates and Keystores

   Run WebLogic's CertGen tool to generate the public/private key and 
   certificate for our service client for the user 'weblogic' and run
   WebLogic's ImportPrivateKey to import the generated private key and 
   certificate into a new client-side private keystore:
  
   > . setWLSEnv.sh       (or on Windows run: setWLSEnv.cmd)
   > java utils.CertGen -keyfilepass ClientKeyPass -certfile ClientCert -keyfile ClientKey -strength 1024 -cn weblogic -ou weblogic -o Oracle -l Mytown -s Mystate -c US
   > java utils.ImportPrivateKey -keystore ClientIdentity.jks -storepass ClientStorePass -storetype JKS -alias clientcert -keypass ClientKeyPass -keyfilepass ClientKeyPass -certfile ClientCert.pem -keyfile ClientKey.pem

3. Add Server's Certificate to new keystore
   
   Copy the Server Certificate ('ServerCert.der') generated by the project
   'PropertySearchService_WSSecCertificate' to the root directory of this 
   client project. Then in this project's root directory, run the Java keytool
   to import the server certificate into the client keystore generated in the 
   previous step.

   > keytool -import -alias servercert -file ServerCert.der -keystore ClientIdentity.jks -storepass ClientStorePass

4, Create New PKI Credential Mapper 

   To enable the service client to have WebLogic inject the client certificate 
   in the request and also sign and encrypt the request, create a new PKI 
   Credential Mapper with the following provider-specific settings:
  
     Name: MyWebSvcPKICredMapper
     Type: PKICredentialMapper
        <press OK button, then go to Provider Specific Settings for new mapper>
     Keystore Provider: <blank>
     Keystore Type: JKS
     Keystore Filename: <project-dir-path>/ClientIdentity.jks
     Keystore Pass Phrase: ClientStorePass
   
   Re-start the Admin Server.

5. Configure PKI Key-Pair and Certificate Credential Mappings

   In the Security Realm - Credential Mapping part of the admin console, 
   select the 'PKI' tab and add the following two new entries - one for the 
   client key-pair and one for the server certificate (note, where a suggested
   value is not shown, leave it set to its default value, which in most cases 
   is blank):

	1)
     Protocol: http
     Remote Host: <target-server-hostname>   (eg. localhost)
     Remote Port: 7001
        <press next button>
     Credential Type: Key Pair
	 WebLogic Server User Name: weblogic
     Principal Type: User
     Key Alias: clientcert
     Key Password: ClientKeyPass

	2)
     Protocol: http
     Remote Host: <target-server-hostname>   (eg. localhost)
     Remote Port: 7001
        <press next button>
     Credential Type: Certificate
	 WebLogic Server User Name: weblogic
     Principal Type: User
     Key Alias: servercert
     
6. Clean Project

   In a command shell, change directory to the root directory containing this 
   sample project. Run the following Ant command, to clean out any old 
   compiled classes:
  
   > ant clean   

7. Generate Service Client Stubs

   Ensure your local WebLogic Server is running and the target Web Service 
   has already been deployed. Run the following command to execute the 
   ClientGen Ant task which generates the Web Service stub classes using the 
   WSDL from the WebLogic hosted Web Service.

   > ant generate

8. Build and Deploy Project

   Ensure your local WebLogic Server is running. Run the following command 
   which re-compiles all classes, executes the WSDLC Ant task to generate the
   Web Service client, builds a Web-Application WAR and then deploys the WAR
   to the running WebLogic server:

   > ant 

9. Test the Project

   From a browser, run the test web application using the following URL and 
   log on to the web-app using the admin username and password, when prompted.
   This should invoke the Web Service client servlet and show the results of 
   the invoked property search Web Service in the displayed html page.

    http://localhost:7001/wssectestweb/

