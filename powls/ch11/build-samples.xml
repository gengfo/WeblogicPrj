<project name="professional.weblogic.ch11.examples" basedir="." default="build">

	<taskdef name="wlserver" classname="weblogic.ant.taskdefs.management.WLServer"/>
	<taskdef name="wldeploy" classname="weblogic.ant.taskdefs.management.WLDeploy"/>
	<property environment="env"/>
	<property file="local.properties"/>


	<path id="examples.class.path">
		<pathelement path="build/bin"/>
		<pathelement path="${env.BEA_HOME}/wlserver_10.3/server/lib/weblogic.jar"/>
	</path>

	<path id="examples.class.path.thin">
		<pathelement path="build/bin"/>
		<pathelement path="${env.BEA_HOME}/wlserver_10.3/server/lib/wlclient.jar"/>
	</path>

	<target name="clean">
		
		<delete dir="build/bin"/>
		<delete dir="WebAppSecurityExample/WebContent/WEB-INF/classes"/>
		
	</target>
	
	<target name="build">

		<mkdir dir="build/bin"/>
		<mkdir dir="WebAppSecurityExample/WebContent/WEB-INF/classes"/>
		
		<javac destdir="build/bin" srcdir="src" includes="**/client/**">
		</javac>

		<javac destdir="exampleEJB/src" srcdir="src" includes="**/ejb/**">
		</javac>

		<javac destdir="WebAppSecurityExample/WebContent/WEB-INF/classes" srcdir="src" includes="**/webappsecurity/**"/>
		<javac destdir="WebAppSecurityExample/WebContent/WEB-INF/classes" srcdir="src" includes="**/client/ejb/**"/>
		
		<condition property="jsse.ssl.debug" value="ssl" else="none">
			<equals arg1="${client.ssl.debug}" arg2="true"/>
		</condition>
		
	</target>

	<target name="run-jaas-client-custom-login">
		<antcall target="run-jaas-client">
			<param name="login.conf" value="login-custom.conf"/>
		</antcall>

	</target>

	<target name="run-jaas-client-standard-login">
		<antcall target="run-jaas-client">
			<param name="login.conf" value="login.conf"/>
		</antcall>
	</target>

	<target name="run-jaas-client" depends="build,deploy-ejb-to-DomainB">

		<echo message="*************************Run JAAS Client Start************************"/>
		<input message="Enter Username: " defaultvalue="someuser" addproperty="username"/>
		<input message="Enter Password: " defaultvalue="password" addproperty="password"/>
		
		<java classname="professional.weblogic.ch11.examples.client.jaas.Example" fork="true">
			<jvmarg line="-Djava.security.auth.login.config=conf/${login.conf}"/>
			<arg line="${username} ${password} t3://localhost:${domainB.port.http}"/>
			<classpath>
				<path refid="examples.class.path"/>
			</classpath>
		</java>
		<echo message="*************************Run JAAS Client End************************"/>
	</target>

	<target name="run-rmi-client-1-way-SSL-thin" depends="build,deploy-ejb-to-DomainB">

		<echo message="*************************Run RMI Client: 1-Way SSL JSSE Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.rmi.Example" fork="true">
			<jvmarg line="-Djavax.net.ssl.trustStore=build/keys/ch11CustomTrust.jks 
						  -Djavax.net.ssl.trustStorePassword=password
						  -Djavax.net.debug=${jsse.ssl.debug}"/>
			<arg line="t3s://localhost:${domainB.port.https}"/>
			<classpath>
				<path refid="examples.class.path.thin"/>
			</classpath>
		</java>
		<echo message="*************************Run RMI Client: 1-Way SSL JSSE End************************"/>
	</target>

	<target name="run-rmi-client-2-way-SSL-thin" depends="build,deploy-ejb-to-DomainB">

		<antcall target="enable-2way-SSL"/>
		<echo message="*************************Run RMI Client: 2-Way SSL JSSE Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.rmi.Example" fork="true">
			<jvmarg line="-Djavax.net.ssl.trustStore=build/keys/ch11CustomTrust.jks 
							  -Djavax.net.ssl.trustStorePassword=password
					          -Djavax.net.ssl.keyStore=build/keys/someuser.jks
							  -Djavax.net.ssl.keyStorePassword=password
							  -Djavax.net.debug=${jsse.ssl.debug}"/>
			<arg line="t3s://localhost:${domainB.port.https}"/>
			<classpath>
				<path refid="examples.class.path.thin"/>
			</classpath>
		</java>
		<echo message="*************************Run RMI Client: 2-Way SSL JSSE End************************"/>
		<antcall target="disable-2way-SSL"/>
	</target>

	<target name="run-rmi-client-1-way-SSL-wls" depends="build,deploy-ejb-to-DomainB">


		<echo message="NOTE: For this sample to work properly, make sure you've updated c:/windows/system32/drivers/etc/hosts"/>
		<echo message="to host domainB.bigrez.com resolved to localhost"/>
		<echo message="*************************Run RMI Client: 1-Way SSL WLS Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.rmi.Example" fork="true">
			<jvmarg line="-Dweblogic.security.TrustKeyStore=CustomTrust
							  -Dweblogic.security.CustomTrustKeyStoreFileName=build/keys/ch11CustomTrust.jks
							  -Dweblogic.security.CustomTrustKeyStorePassPhrase=password
							  -Dssl.debug=${client.ssl.debug} -Dweblogic.StdoutDebugEnabled=${client.ssl.debug}"/>
			<arg line="t3s://domainB.bigrez.com:${domainB.port.https}"/>
			<classpath>
				<path refid="examples.class.path"/>
			</classpath>
		</java>
		<echo message="*************************Run RMI Client: 1-Way SSL WLS End************************"/>


	</target>

	<target name="run-rmi-client-2-way-SSL-wls" depends="build,deploy-ejb-to-DomainB">

		<antcall target="enable-2way-SSL"/>

		<echo message="NOTE: For this sample to work properly, make sure you've updated c:/windows/system32/drivers/etc/hosts"/>
		<echo message="to host domainB.bigrez.com resolved to localhost"/>
		<echo message="*************************Run RMI Client: 2-Way SSL WLS Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.rmi.ExampleWLS" fork="true">
			<jvmarg line="-Dweblogic.security.TrustKeyStore=CustomTrust
								  -Dweblogic.security.CustomTrustKeyStoreFileName=build/keys/ch11CustomTrust.jks
								  -Dweblogic.security.CustomTrustKeyStorePassPhrase=password
								  -Dssl.debug=${client.ssl.debug} -Dweblogic.StdoutDebugEnabled=${client.ssl.debug}"/>
			<arg line="build/keys/someuser.jks someuser password t3s://domainB.bigrez.com:${domainB.port.https}"/>
			<classpath>
				<path refid="examples.class.path"/>
			</classpath>
		</java>
		<echo message="*************************Run RMI Client: 2-Way SSL WLS End************************"/>

		<antcall target="disable-2way-SSL"/>
	</target>

	<target name="run-rmi-client-2-way-SSL-wls-with-identity" depends="build,deploy-ejb-to-DomainB">

		<antcall target="enable-2way-SSL"/>

		<echo message="NOTE: For this sample to work properly, make sure you've updated c:/windows/system32/drivers/etc/hosts"/>
		<echo message="to host domainB.bigrez.com resolved to localhost"/>
		<echo message="*************************Run RMI Client: 2-Way SSL WLS Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.rmi.ExampleWLSWithIdentity" fork="true">
			<jvmarg line="-Dweblogic.security.TrustKeyStore=CustomTrust
									  -Dweblogic.security.CustomTrustKeyStoreFileName=build/keys/ch11CustomTrust.jks
									  -Dweblogic.security.CustomTrustKeyStorePassPhrase=password
									  -Dssl.debug=${client.ssl.debug} -Dweblogic.StdoutDebugEnabled=${client.ssl.debug}"/>
			<arg line="build/keys/someuser.jks someuser password t3s://domainB.bigrez.com:${domainB.port.https}"/>
			<classpath>
				<path refid="examples.class.path"/>
			</classpath>
		</java>
		<echo message="*************************Run RMI Client: 2-Way SSL WLS End************************"/>

		<antcall target="disable-2way-SSL"/>
	</target>


	<target name="run-http-client-1-way-SSL-wls" depends="build,deploy-https-webapp-to-DomainB">


		<echo message="NOTE: For this sample to work properly, make sure you've updated c:/windows/system32/drivers/etc/hosts"/>
		<echo message="to host domainB.bigrez.com resolved to localhost"/>
		<echo message="*************************Run HTTP Client: 1-Way SSL WLS Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.http.ExampleWLS1Way" fork="true">
			<jvmarg line="-Dweblogic.security.TrustKeyStore=CustomTrust
								  -Dweblogic.security.CustomTrustKeyStoreFileName=build/keys/ch11CustomTrust.jks
								  -Dweblogic.security.CustomTrustKeyStorePassPhrase=password
								  -Dssl.debug=${client.ssl.debug} -Dweblogic.StdoutDebugEnabled=${client.ssl.debug}"/>
			<arg line="https://domainB.bigrez.com:${domainB.port.https}/httpsSampleWebApp/index.jsp"/>
			<classpath>
				<path refid="examples.class.path"/>
			</classpath>
		</java>
		<echo message="*************************Run HTTP Client: 1-Way SSL WLS End************************"/>


	</target>


	<target name="run-http-client-2-way-SSL-wls" depends="build,deploy-https-webapp-to-DomainB">

		<antcall target="enable-2way-SSL"/>
		<echo message="NOTE: For this sample to work properly, make sure you've updated c:/windows/system32/drivers/etc/hosts"/>
		<echo message="to host domainB.bigrez.com resolved to localhost"/>
		<echo message="*************************Run HTTP Client: 2-Way SSL WLS Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.http.ExampleWLS2Way" fork="true">
			<jvmarg line="-Dweblogic.security.TrustKeyStore=CustomTrust
									  -Dweblogic.security.CustomTrustKeyStoreFileName=build/keys/ch11CustomTrust.jks
									  -Dweblogic.security.CustomTrustKeyStorePassPhrase=password
									  -Dssl.debug=${client.ssl.debug} -Dweblogic.StdoutDebugEnabled=${client.ssl.debug}"/>
			<arg line="build/keys/someuser.jks someuser password https://domainB.bigrez.com:${domainB.port.https}/httpsSampleWebApp/index.jsp"/>
			<classpath>
				<path refid="examples.class.path"/>
			</classpath>
		</java>
		<echo message="*************************Run HTTP Client: 2-Way SSL WLS End************************"/>
		<antcall target="disable-2way-SSL"/>

	</target>

	<target name="run-http-client-2-way-SSL-wls-custom" depends="build,deploy-https-webapp-to-DomainB">

		<antcall target="enable-2way-SSL"/>
		<echo message="NOTE: For this sample to work properly, make sure you've updated c:/windows/system32/drivers/etc/hosts"/>
		<echo message="to host domainB.bigrez.com resolved to localhost"/>
		<echo message="*************************Run HTTP Client: 2-Way SSL WLS Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.http.ExampleWLS2WayWithCustomTrustAndHostnameVerification" fork="true">
			<jvmarg line="-Dweblogic.security.TrustKeyStore=CustomTrust
										  -Dweblogic.security.CustomTrustKeyStoreFileName=build/keys/ch11CustomTrust.jks
										  -Dweblogic.security.CustomTrustKeyStorePassPhrase=password
										  -Dssl.debug=${client.ssl.debug} -Dweblogic.StdoutDebugEnabled=${client.ssl.debug}"/>
			<arg line="build/keys/someuser.jks someuser password https://domainB.bigrez.com:${domainB.port.https}/httpsSampleWebApp/index.jsp"/>
			<classpath>
				<path refid="examples.class.path"/>
			</classpath>
		</java>
		<echo message="*************************Run HTTP Client: 2-Way SSL WLS End************************"/>
		<antcall target="disable-2way-SSL"/>

	</target>


	<target name="run-http-client-2-way-SSL-thin" depends="build,deploy-https-webapp-to-DomainB">

		<antcall target="enable-2way-SSL"/>
		<echo message="*************************Run HTTP Client: 2-Way SSL JSSE Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.http.ExampleJSSE2Way" fork="true">
			<jvmarg line="-Djavax.net.debug=${jsse.ssl.debug}"/>
			<arg line="build/keys/someuser.jks password build/keys/ch11CustomTrust.jks password https://domainB.bigrez.com:${domainB.port.https}/httpsSampleWebApp/index.jsp"/>
			<classpath>
				<path refid="examples.class.path.thin"/>
			</classpath>
		</java>
		<echo message="*************************Run HTTP Client: 2-Way SSL JSSE End************************"/>
		<antcall target="disable-2way-SSL"/>
	</target>


	<target name="run-http-client-2-way-SSL-thin-custom" depends="build,deploy-https-webapp-to-DomainB">

		<antcall target="enable-2way-SSL"/>
		<echo message="*************************Run HTTP Client: 2-Way SSL JSSE - Custom TrustManager Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.http.ExampleJSSE2WayWithCustomTrustAndHostnameVerification" fork="true">
			<jvmarg line="-Djavax.net.ssl.HostnameVerifier=professional.weblogic.ch11.examples.client.http.JSSECustomHostnameVerifier -Djavax.net.debug=${jsse.ssl.debug}"/>
			<arg line="build/keys/someuser.jks password build/keys/ch11CustomTrust.jks password https://domainB.bigrez.com:${domainB.port.https}/httpsSampleWebApp/index.jsp"/>
			<classpath>
				<path refid="examples.class.path.thin"/>
			</classpath>
		</java>
		<echo message="*************************Run HTTP Client: 2-Way SSL JSSE - Custom TrustManager End************************"/>
		<antcall target="disable-2way-SSL"/>
	</target>


	<target name="run-http-client-2-way-SSL-thin-with-identity" depends="build,deploy-https-webapp-to-DomainB">

		<antcall target="enable-2way-SSL"/>
		<echo message="*************************Run HTTP Client: 2-Way SSL JSSE Start************************"/>
		<java classname="professional.weblogic.ch11.examples.client.http.ExampleJSSE2Way" fork="true">
			<jvmarg line="-Djavax.net.debug=${jsse.ssl.debug}"/>
			<arg line="build/keys/someuser.jks password build/keys/ch11CustomTrust.jks password https://domainB.bigrez.com:${domainB.port.https}/httpsSampleWebApp/protected/index.jsp"/>
			<classpath>
				<path refid="examples.class.path.thin"/>
			</classpath>
		</java>
		<echo message="*************************Run HTTP Client: 2-Way SSL JSSE End************************"/>
		<antcall target="disable-2way-SSL"/>
	</target>

	<!--  Deploying the JEE Artifacts -->
	<target name="deploy">
	
		<antcall target="deploy-ejb-to-DomainA"></antcall>
		<antcall target="deploy-ejb-to-DomainB"/>
		<antcall target="deploy-security-webapp-to-DomainA"/>
		<antcall target="deploy-https-webapp-to-DomainB"/>
		
	
	</target>
	
	
	<target name="deploy-ejb-to-DomainB" depends="startDomainB">

		<wldeploy
				action="deploy" verbose="false" debug="false"
				name="Ch11ExampleEJB" source="exampleEJB/src"
				user="weblogic" password="welcome1"
				adminurl="t3://localhost:${domainB.port.http}" targets="myserver" />

	</target>

	<target name="deploy-security-webapp-to-DomainA" depends="startDomainA">

		<wldeploy
							action="undeploy" verbose="true" debug="false" failonerror="false"
							name="Ch11SecurityExampleWebApp" 
							user="weblogic" password="welcome1"
							adminurl="t3://localhost:${domainA.port.http}" targets="myserver"/>


		<wldeploy
					action="deploy" verbose="false" debug="false"
					name="Ch11SecurityExampleWebApp" source="WebAppSecurityExample/WebContent"
					user="weblogic" password="welcome1"
					adminurl="t3://localhost:${domainA.port.http}" targets="myserver"/>

		<wldeploy
							action="start" verbose="false" debug="false"
							name="Ch11SecurityExampleWebApp" 
							user="weblogic" password="welcome1"
							adminurl="t3://localhost:${domainA.port.http}" targets="myserver"/>

	</target>

	<target name="deploy-ejb-to-DomainA" depends="startDomainA">



		<wldeploy
			action="undeploy" verbose="false" debug="false"
			name="Ch11ExampleEJB" 
			user="weblogic" password="welcome1"
			adminurl="t3://localhost:${domainA.port.http}" targets="myserver" failonerror="false"/>




		<wldeploy
			action="deploy" verbose="false" debug="false"
			name="Ch11ExampleEJB" source="exampleEJB/src"
			user="weblogic" password="welcome1"
			adminurl="t3://localhost:${domainA.port.http}" targets="myserver" />


		<wldeploy
			action="start" verbose="false" debug="false"
			name="Ch11ExampleEJB" 
			user="weblogic" password="welcome1"
			adminurl="t3://localhost:${domainA.port.http}" targets="myserver"/>

	</target>


	<target name="deploy-https-webapp-to-DomainB" depends="startDomainB">


		<wldeploy
						action="deploy" verbose="false" debug="false"
						name="Ch11HttpsWebApp" source="httpsSampleWebApp/WebContent"
						user="weblogic" password="welcome1"
						adminurl="t3://localhost:${domainB.port.http}" targets="myserver" />

	</target>



	<!-- Common Targets -->
	<target name="startDomainA-with-defaultRealm" depends="startDomainA">
		<antcall target="startDomainA-with-realm">
			<param name="realmName" value="myrealm"/>
		</antcall>
	</target>

	<target name="startDomainA-with-customRolesRealm" depends="startDomainA">
		<antcall target="startDomainA-with-realm">
			<param name="realmName" value="CustomRoles"/>
		</antcall>
	</target>

	<target name="startDomainA-with-customRolesAndPoliciesRealm" depends="startDomainA">
		<antcall target="startDomainA-with-realm">
			<param name="realmName" value="CustomRolesAndPolicies"/>
		</antcall>
	</target>

	<target name="startDomainA-with-realm">
		<antcall target="set-realm">
			<param name="domain_http_port" value="${domainA.port.http}"/>
		</antcall>

		<wlserver dir="build/domains/${domainA.name}" 
    				    		username="weblogic" password="welcome1" host="localhost" port="${domainA.port.http}" action="reboot" noexit="true" forceshutdown="true"/>

		<antcall target="deploy-security-webapp-to-DomainA"/>
		<antcall target="deploy-ejb-to-DomainA"/>

		<wlst filename="${scripts.dir}/importRolesAndPolicies.py" arguments="weblogic welcome1 t3://localhost:${domainA.port.http} ch11_${domainA.name} ${realmName}"/>
	</target>




	<target name="startDomainB">
		<antcall target="startDomain">
			<param name="domainName" value="${domainB.name}"/>
			<param name="domainPort" value="${domainB.port.http}"/>
		</antcall>
	</target>

	<target name="startDomainA">
		<antcall target="startDomain">
			<param name="domainName" value="${domainA.name}"/>
			<param name="domainPort" value="${domainA.port.http}"/>
		</antcall>
	</target>

	<target name="startDomain" depends="get-connection-state,build">

		<wlserver dir="build/domains/${domainName}" 
			    		username="weblogic" password="welcome1" host="localhost" port="${domainPort}" action="${connection.state}"/>
	</target>

	<target name="enable-2way-SSL">

		<antcall target="set-ssl-state">
			<param name="domain_name" value="${domainB.name}"/>
			<param name="domain_http_port" value="${domainB.port.http}"/>
			<param name="sslstate" value="true"/>
		</antcall>


	</target>

	<target name="disable-2way-SSL">

		<antcall target="set-ssl-state">
			<param name="domain_name" value="${domainB.name}"/>
			<param name="domain_http_port" value="${domainB.port.http}"/>
			<param name="sslstate" value="false"/>
		</antcall>

	</target>

	<target name="set-ssl-state">

		<wlserver dir="build/domains/${domain_name}" port="${domain_http_port}" domainname="ch11_${domain_name}"
				    		username="weblogic" password="welcome1" host="localhost" action="connect"/>


		<echo message="Server Started. Configuring 2-way SSL"/>

		<wlst filename="${scripts.dir}/setSSLMode.py" arguments="weblogic welcome1 t3://localhost:${domain_http_port} ${sslstate}"/>


	</target>

	<target name="get-connection-state">

		<delete file="build/domains/${domainName}/true.dat" failonerror="false"/>

		<wlst filename="${scripts.dir}/checkConnection.py" arguments="weblogic welcome1 t3://localhost:${domainPort} build/domains/${domainName}/" failonerror="false"/>

		<condition property="connection.state" value="connect" else="start">
			<and>
				<available file="build/domains/${domainName}/true.dat"/>
			</and>
		</condition>
	</target>

	<target name="set-realm">

		<wlst filename="${scripts.dir}/setRealm.py" arguments="weblogic welcome1 t3://localhost:${domain_http_port} ${realmName}"/>

	</target>
</project>
